package com.myteek.common;

import lombok.Getter;

@Getter
public enum ResponseStatus {

    SUCCESS(0, "SUCCESS"),
    ERROR(1, "ERROR"),
    DATA_READ_WRITE_ERROR(2, "DATA_READ_WRITE_ERROR"),

    PARAM_ERROR(10, "PARAM_ERROR"),
    PARAM_TYPE_MISMATCH(11, "PARAM_TYPE_MISMATCH"),
    TOKEN_ERROR(12, "TOKEN_ERROR"),
    TOKEN_EXPIRED(13, "TOKEN_EXPIRED"),
    API_PERMISSION_ERROR(14, "API_PERMISSION_ERROR"),

    DATA_EXISTS_ERROR(20, "DATA_EXISTS_ERROR"),
    DATA_READ_ERROR(21, "DATA_READ_ERROR"),
    DATA_WRITE_ERROR(22, "DATA_WRITE_ERROR"),
    DATA_ADD_ERROR(23, "DATA_ADD_ERROR"),
    DATA_EDIT_ERROR(24, "DATA_EDIT_ERROR"),
    DATA_DELETE_ERROR(25, "DATA_DELETE_ERROR"),

    /**
     * 1xx message
     */
    HTTP_CONTINUE(2100, "HTTP_CONTINUE"),
    HTTP_SWITCHING_PROTOCOLS(2101,"HTTP_SWITCHING_PROTOCOLS"),
    HTTP_PROCESSING(2102,"HTTP_PROCESSING"),
    HTTP_EARLY_HINTS(2103,"HTTP_EARLY_HINTS"),

    /**
     * 2xx success
     */
    HTTP_OK(2200,"HTTP_OK"),
    HTTP_CREATED(2201,"HTTP_CREATED"),
    HTTP_ACCEPTED(2202,"HTTP_ACCEPTED"),
    HTTP_NON_AUTHORITATIVE_INFORMATION(2203,"HTTP_NON_AUTHORITATIVE_INFORMATION"),
    HTTP_NO_CONTENT(2204,"HTTP_NO_CONTENT"),
    HTTP_RESET_CONTENT(2205,"HTTP_RESET_CONTENT"),
    HTTP_PARTIAL_CONTENT(2206,"HTTP_PARTIAL_CONTENT"),
    HTTP_MULTI_STATUS(2207,"HTTP_MULTI_STATUS"),
    HTTP_ALREADY_REPORTED(2208,"HTTP_ALREADY_REPORTED"),
    HTTP_IM_USED(2226,"HTTP_IM_USED"),

    /**
     * 3xx redirect
     */
    HTTP_MULTIPLE_CHOICES(2300,"HTTP_MULTIPLE_CHOICE"),
    HTTP_MOVED_PERMANENTLY(2301,"HTTP_MOVED_PERMANENTLY"),
    HTTP_FOUND(2302,"HTTP_FOUND"),
    HTTP_SEE_OTHER(2303,"HTTP_SEE_OTHER"),
    HTTP_NOT_MODIFIED(2304,"HTTP_NOT_MODIFIED"),
    HTTP_USE_PROXY(2305,"HTTP_USE_PROXY"),
    HTTP_SWITCH_PROXY(2306,"HTTP_SWITCH_PROXY"),
    HTTP_TEMPORARY_REDIRECT(2307,"HTTP_TEMPORARY_REDIRECT"),
    HTTP_PERMANENT_REDIRECT(2308,"HTTP_PERMANENT_REDIRECT"),

    /**
     * 4xx client error
     */
    HTTP_BAD_REQUEST(2400,"HTTP_BAD_REQUEST"),
    HTTP_UNAUTHORIZED(2401,"HTTP_UNAUTHORIZED"),
    HTTP_PAYMENT_REQUIRED(2402,"HTTP_PAYMENT_REQUIRED"),
    HTTP_FORBIDDEN(2403,"HTTP_FORBIDDEN"),
    HTTP_NOT_FOUND(2404,"HTTP_NOT_FOUND"),
    HTTP_METHOD_NOT_ALLOWED(2405,"HTTP_METHOD_NOT_ALLOWED"),
    HTTP_NOT_ACCEPTABLE(2406,"HTTP_NOT_ACCEPTABLE"),
    HTTP_PROXY_AUTHENTICATION_REQUIRED(2407,"HTTP_PROXY_AUTHENTICATION_REQUIRED"),
    HTTP_REQUEST_TIMEOUT(2408,"HTTP_REQUEST_TIMEOUT"),
    HTTP_CONFLICT(2409,"HTTP_CONFLICT"),
    HTTP_GONE(2410,"HTTP_GONE"),
    HTTP_LENGTH_REQUIRED(2411,"HTTP_LENGTH_REQUIRED"),
    HTTP_PRECONDITION_FAILED(2412,"HTTP_PRECONDITION_FAILED"),
    HTTP_REQUEST_ENTITY_TOO_LARGE(2413,"HTTP_REQUEST_ENTITY_TOO_LARGE"),
    HTTP_REQUEST_URI_TOO_LONG(2414,"HTTP_REQUEST_URI_TOO_LONG"),
    HTTP_UNSUPPORTED_MEDIA_TYPE(2415,"HTTP_UNSUPPORTED_MEDIA_TYPE"),
    HTTP_REQUESTED_RANGE_NOT_SATISFIABLE(2416,"HTTP_REQUESTED_RANGE_NOT_SATISFIABLE"),
    HTTP_EXPECTATION_FAILED(2417,"HTTP_EXPECTATION_FAILED"),
    HTTP_I_AM_A_TEAPOT(2418,"HTTP_I_AM_A_TEAPOT"),
    HTTP_MISDIRECTED_REQUEST(2421,"HTTP_MISDIRECTED_REQUEST"),
    HTTP_UNPROCESSABLE_ENTITY(2422,"HTTP_UNPROCESSABLE_ENTITY"),
    HTTP_LOCKED(2423,"HTTP_LOCKED"),
    HTTP_FAILED_DEPENDENCY(2424,"HTTP_FAILED_DEPENDENCY"),
    HTTP_TOO_EARLY(2425,"HTTP_TOO_EARLY"),
    HTTP_UPGRADE_REQUIRED(2426,"HTTP_UPGRADE_REQUIRED"),
    HTTP_PRECONDITION_REQUIRED(2428,"HTTP_PRECONDITION_REQUIRED"),
    HTTP_TOO_MANY_REQUESTS(2429,"HTTP_TOO_MANY_REQUESTS"),
    HTTP_REQUEST_HEADER_FIELD_TOO_LARGE(2431,"HTTP_REQUEST_HEADER_FIELD_TOO_LARGE"),
    HTTP_LOGIN_TIMEOUT(2440,"HTTP_LOGIN_TIMEOUT"),
    HTTP_UNAVAILABLE(2451,"HTTP_UNAVAILABLE"),

    /**
     * 5xx server error
     */
    HTTP_INTERNAL_SERVER_ERROR(2500,"HTTP_INTERNAL_SERVER_ERROR"),
    HTTP_NOT_IMPLEMENTED(2501,"HTTP_NOT_IMPLEMENTED"),
    HTTP_BAD_GATEWAY(2502,"HTTP_BAD_GATEWAY"),
    HTTP_SERVICE_UNAVAILABLE(2503,"HTTP_SERVICE_UNAVAILABLE"),
    HTTP_GATEWAY_TIMEOUT(2504,"HTTP_GATEWAY_TIMEOUT"),
    HTTP_VERSION_NOT_SUPPORTED(2505,"HTTP_VERSION_NOT_SUPPORTED"),
    HTTP_VARIANT_ALSO_NEGOTIATES(2506,"HTTP_VARIANT_ALSO_NEGOTIATES"),
    HTTP_INSUFFICIENT_STORAGE(2507,"HTTP_INSUFFICIENT_STORAGE"),
    HTTP_LOOP_DETECTED(2508,"HTTP_LOOP_DETECTED"),
    HTTP_NOT_EXTENDED(2510,"HTTP_LOOP_EXTENDED"),
    HTTP_NETWORK_AUTHENTICATION_REQUIRED(2511,"HTTP_NETWORK_AUTHENTICATION_REQUIRED"),

    /**
     * not official
     */
    HTTP_ENHANCE_YOUR_CALM(2420,"HTTP_ENHANCE_YOUR_CALM"),
    HTTP_NO_RESPONSE(2444,"HTTP_NO_RESPONSE"),
    HTTP_BLOCKED_BY_WINDOWS_PARENTAL_CONTROLS(2450,"HTTP_BLOCKED_BY_WINDOWS_PARENTAL_CONTROLS"),
    HTTP_REQUEST_HEADER_TOO_LARGE(2494,"HTTP_REQUEST_HEADER_TOO_LARGE");

    private int code;

    private String message;

    ResponseStatus(int code, String message) {
        this.code = code;
        this.message = message;
    }

    /**
     * value of code
     * @param code code
     * @return
     */
    public static ResponseStatus of(int code) {
        for (ResponseStatus item : ResponseStatus.values()) {
            if (item.code == code) {
                return item;
            }
        }
        return null;
    }

    /**
     * value of message
     * @param message message
     * @return
     */
    public static ResponseStatus of(String message) {
        for (ResponseStatus item : ResponseStatus.values()) {
            if (item.message.equals(message)) {
                return item;
            }
        }
        return null;
    }

}
